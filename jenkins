pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                // Use your build automation tool (e.g., Maven) to build your code
                sh 'mvn clean package'
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                // Use your test automation tools (e.g., JUnit) for unit and integration tests
                sh 'run_unit_tests'
                sh 'run_integration_tests'
            }
        }

        stage('Code Analysis') {
            steps {
                // Use a code analysis tool (e.g., SonarQube) to analyze your code
                sh 'sonar-scanner'
            }
        }

        stage('Security Scan') {
            steps {
                // Use a security scanning tool (e.g., OWASP ZAP) to scan your code
                sh 'security-scan'
            }
        }

        stage('Deploy to Staging') {
            steps {
                // Use deployment scripts or tools to deploy to a staging server (e.g., AWS EC2)
                sh 'deploy_to_staging'
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                // Run integration tests on the staging environment
                sh 'run_integration_tests_staging'
            }
        }

        stage('Deploy to Production') {
            steps {
                // Use deployment scripts or tools to deploy to a production server (e.g., AWS EC2)
                sh 'deploy_to_production'
            }
        }
    }

    post {
        failure {
            // Send email notification in case of failure
            emailext body: "Pipeline failed. Please check the logs.",
                subject: "Pipeline Failed",
                to: "prabhinau@gmail.com"
        }
        success {
            // Send email notification in case of success
            emailext body: "Pipeline succeeded!",
                subject: "Pipeline Successful",
                to: "prabhinau@gmail.com"
        }
    }
}
